<script src="https://code.highcharts.com/highcharts.js"></script>
<script src="https://code.highcharts.com/highcharts-more.js"></script>

<div class="view view--full">
    <div class="layout layout--col gap--space-between">
        <div class="grid grid--cols-3" style="margin-left: 70px; margin-bottom: 5px;">
            <div class="item">
                <div class="meta"></div>
                <div class="content">
                    <span class="value value--tnums">{{ current_weight }} kg</span>
                    <span class="label">Aktualna</span>
                </div>
            </div>
            <div class="item">
                <div class="meta"></div>
                <div class="content">
                    <span class="value value--tnums">{{ current_trend }} kg</span>
                    <span class="label">Trend</span>
                </div>
            </div>
            <div class="item">
                <div class="meta"></div>
                <div class="content">
                    <span class="value value--tnums">{{ change }} kg</span>
                    <span class="label">Tyg. zmiana trendu</span>
                </div>
            </div>
        </div>

        <div id="chart-123" style="width: 100%"></div>
    </div>

    <div class="title_bar">
        <img class="image" src="https://libra-app.eu/images/icon-512.png"/>
        <span class="title">Libra Weight Manager</span>
        <span class="instance"></span>
    </div>
</div>

<script type="text/javascript">

    function formatDateLabel(dateString) {
        let date = new Date(dateString);

        return date.toLocaleDateString('pl-PL', {
            month: 'short',
            day: '2-digit'
        });
    }

    function roundToFifthDecimal(num, roundUp = true) {
        if (roundUp) {
            return Math.ceil(num / 0.2) * 0.2;
        } else {
            return Math.floor(num / 0.2) * 0.2;
        }
    }

    const libraWeightData = [];

    {% for item in weights %}
    libraWeightData.push({
        date: "{{ item.date }}",
        weight: {{ item.weight }},
        trend: {{ item.trend }}
    });
    {% endfor %}

    const dates = libraWeightData.map(item => item.date);
    const startDate = new Date(dates[0]);
    const endDate = new Date(dates[dates.length - 1]);

    const allDates = [];

    //Fill gaps in dates range
    for (let d = startDate; d <= endDate; d.setDate(d.getDate() + 1)) {
        allDates.push(d.toISOString().split('T')[0]);
    }

    const dateLabels = [];
    const weightAndTrendRange = [];
    const trendData = [];

    allDates.forEach(date => {
        const entry = libraWeightData.find(item => item.date === date);
        dateLabels.push(date);
        trendData.push(entry ? entry.trend : null);
        weightAndTrendRange.push(entry ? [entry.trend, entry.weight] : [null, null]);
    });

    //calculate min and max for the Y axis
    let minValue = Infinity;
    let maxValue = -Infinity;

    weightAndTrendRange.forEach(subArray => {
        subArray.forEach(value => {
            if (value && value < minValue) {
                minValue = value;
            }
            if (value && value > maxValue) {
                maxValue = value;
            }
        });
    });

    const yMin = roundToFifthDecimal(minValue, false);
    const yMax = roundToFifthDecimal(maxValue, true);

    Highcharts.chart('chart-123', {
        chart: {
            type: 'columnrange',
            height: 340
        },
        title: {
            text: ''
        },
        yAxis: [
            {
                labels: {
                    style: {
                        fontSize: "16px",
                        color: "#000000"
                    }
                },
                gridLineDashStyle: "shortdot",
                gridLineWidth: 1,
                gridLineColor: "#000000",
                tickAmount: 15,
                min: yMin,
                max: yMax,
                title: null
            },
            {
                opposite: true,
                labels: {
                    style: {
                        fontSize: "16px",
                        color: "#000000"
                    }
                },
                gridLineWidth: 0,
                tickAmount: 15,
                min: yMin,
                max: yMax,
                title: null
            }
        ],
        xAxis: {
            type: "datetime",
            categories: dateLabels,
            labels: {
                style: {
                    fontSize: "16px",
                    color: "#000000"
                },
                formatter: function () {
                    return formatDateLabel(this.value);
                },
            },
            lineWidth: 0,
            gridLineDashStyle: "dot",
            tickWidth: 1,
            tickLength: 0,
            gridLineWidth: 1,
            gridLineColor: "#000000",
            tickPixelInterval: 15
        },
        legend: {
            enabled: false
        },
        plotOptions: {
            columnrange: {
                pointWidth: 2,
                borderWidth: 0
            },
            series: {
                animation: false,
                lineWidth: 4
            }
        },
        series: [
            {
                name: '',
                data: weightAndTrendRange,
                type: 'columnrange',
                color: '#000000'
            },
            {
                name: '',
                data: trendData,
                type: 'spline',
                color: 'black',
                marker: {
                    enabled: false
                },
                connectNulls: true
            }
        ],
        credits: {
            enabled: false
        },
    });

</script>